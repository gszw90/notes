# compose版本
version: "3"
# 服务列表
services:
  # 自定义服务名称，如果没有配置container_name，容器名就是这个
  my_ubuntu:
    # 基于Dockerfile构建服务时需要配置的参数
    build:
      # 指定Dockerfile文件的路径，.表示当前目录
      context: .
      # 指定Dockerfile文件的名字，默认Dockerfile
      dockerfile: Dockerfile
    # 基础镜像，如果使用了build，就不需要设置image
    image: ubuntu:latest
    # 容器名称，不配置就使用上面的服务名称
    container_name: my_ubuntu
    # 端口映射，用于映射宿主机与容器间的端口
    ports:
      # 宿主机的8089端口与容器的8089端口进行映射
      - 8089:8089
      # 宿主机的一个随机端口与容器的3000端口进行映射
      - 3000
    # 端口暴露，但是不会把端口映射到宿主机，用于容器间的端口通信
    expose:
      - 8089
    # 目录挂载，既可以挂载宿主机的文件或者目录，也可以挂载数据卷
    volumes:
      - ./data:/data
    environment:
      APP_PORT: 8089
      APP_NAME: my_app
    # 指定依赖，确保当前服务在依赖服务启动后才能启动
    depends_on:
      - db
    # 指定网络
    networks:
      - app_network
    # 容器启动后执行的命令
    command: "echo success"
  db:
    image: mysql:8.4.0
    container_name: db
    ports:
      - 13306:3306
    # 挂载数据卷
    volumes:
      - db_data:/var/lib/mysql/data
    networks:
      - app_network

# 自定义网络配置
networks:
  # 网络名称
  app_network:
    # 网络类型：bridge，host，none
    driver: bridge
# 自定义数据卷
volumes:
  db_data: